continue
@request.users.first.role_id
@request.users.first
@request.users
continue
@request.users
@request
@user
@request.users = current_user
@request.users
@request
@request.users
@request.users.
@request.users.first
@request.users
@request.users(id:2)
@request.users(2)
@request.users.role_id
@request.users
@request.users.roles
@request.users.role
@request.users
continue
@request.users.roles
@request.users.role
@request.users
continue
@store
@user
continue
@request.users
 @request
@user
continue
@request.users
@request.user
@request
@user
continue
@request.users
@request
@user
params
@user
continue
@manager
@user
@manager.manager
@manager
continue
@manager
continue
@request.manager
@request.manager_id.nil?
@request
@user
continue
@request.update(manager_id: @user)
@user.id
@user
continue
@request
@user
continue
@request
@request.manager_id
@user
continue
@request.manager_id
@request.manager_id.nil?
params[:asignar]
continue
params
@user
exit
current_user
@user
@request.manager_id
params[:asignar].present?
params[:asignar].presence?
params[:asignar]
params
continue
params
continue
params[:asignar]
params
@request
params
continue
params[:enviar]
params[:commit]
params[:enviar]
continue
params[:enviar]
params[:commit]
params[:request]
params
continue
params
continue
params
continue
current_user
@user
continue
@unassigned
continue
@request.user = @user
@request.user
@request
@store
params
@user.id
@user.user_id
current_user
@user
continue
@store
@user
continue
params
@store
@user
continue
@user
params
continue
current_user.store
current_user.first_name
current_user
continue
@user
current_user
continue
@requests.where(store: !nil)
@requests.where(store: 1)
@requests.stores
@stores
@requests
continue
debugger
continue
debugger
continue
params[:request][:printcard_authorised]
continue
params[:request][:printcard_authorised]
continue
params[:request][:payment_uploaded]
params[:request]
params
continue
 @request.documents
@request
