exit
pp self
self
continue
exit
continue
@ids_references
exit
@ids_references
exit
@ids_references
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
params["store_movements"]["rowsLimit"]
params["store_movements"]["rowsCount"]
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
Ticket.first.store_movements
Ticket.first.payments
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
User.last
params["users"]
@ids_references
continue
pp params["users"]
pp params["payments"]["rowsLimit"]
pp params["payments"].count
pp params["payments"].first.first
pp params["payments"].first.key
pp params["payments"]
pp params["tickets"].first.second["object"]
pp params["tickets"].first.second
pp params["tickets"].first.first
pp params["tickets"].first.value
pp params["tickets"].first
pp params
params
continue
@rows
continue
pp @rows
@rows
continue
@rows
continue
exit
@rows
continue
params[:cfdi_type]
continue
exit
@objects
@general_bill
@rows
continue
exit
@rows
exit
@rows
exit
params[:query]
params[:q]
params
q
collect
pp json: { products: products}
pp render json: { products: products}
render json: { products: products}
continue
Ticket.find(5)
Ticket.find(3)
exit
pp BillingAddress.new
User.find(1)
Ticket.find(3)
exit
Ticket.find(3).prospect
Ticket.find(3)
exit
@ids_references[table_name.singularize].value
@ids_references[table_name.singularize]
@ids_references[table_name.singularize][value.to_s]
table_name.singularize.camelize.constantize.find(attr.last)
@ids_references[table_name.singularize].nil?
@ids_references[table_name.singularize]
 @ids_references
table_name
table_name = attr.first.gsub(/_id/,'')
@ids_references
attr.first
attr.last
attr.first
values[:object]
attr
reg
continue
reg
exit
reg
continue
attr
continue
attr
continue
attr
values[:object]
continue
values[:object]
attr
continue
attr
values[:object]
attr
atter
continue
values[:object]
attr
reg
continue
tables_find_parameters[reg.class.to_s]
info = tables_find_parameters[reg.class.to_s]
tables_find_parameters[reg.class.to_s]
info = tables_find_parameters[reg.class.to_s]
tables_find_parameters
tables_find_parameters = params_find()
reg.class.to_s
reg.class
reg
continue
attr
values[:object]
continue
attr
values[:object]
continue
values[:object]
attr
continue
attr
values[:object]
continue
values[:object]
reg
attr
continue
Ticket.last
StoreSale.last
self
continue
StoreSale.last
self
StoreSale.last
continue
StoreSale.last
self
continue
self
continue
self
continue
self
continue
self
continue
self
continue
self
continue
self
StoreSale.last
continue
StoreSale.last
self
continue
self
continue
(self.movement_type == 'venta' || self.movement_type == 'devolución')
self
continue
self
continue
self
continue
self
continue
(self.movement_type == 'venta' || self.movement_type == 'devolución')
self
continue
(self.movement_type == 'venta' || self.movement_type == 'devolución')
self.movement_type
self
continue
exit
params[:installCode]
check_login_data
exit
url = @store.initial_inventory_url
continue
params[:store][:initial_inventory]
continue
 params[:store][:initial_inventory].present?
@store.initial_inventory_url
@store.initial_inventory
@store
continue
 params[:store][:initial_inventory].present?
params[:store][:initial_inventory]
[:store][:initial_inventory]
params
continue
exit
pp params
