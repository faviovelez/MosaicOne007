continue
pending_order
entry.fix_quantity
continue
pending_order
entry
continue
entry
continue
entry.fix_quantity
entry
continue
@entries
exit
continue
movement
continue
order_quantity
inventory.fix_quantity
inventory
continue
@product_request
continue
inventory
inventory.fix_quantity
entry.fix_quantity
entry_fix.quantity
continue
create_movement
PendingMovement.last
pending_order
continue
inventory.fix_quantity
order_quantity
continue
params
continue
@product_request
continue
@product_request
continue
@product_request
continue
@product_request
continue
PendingMovement.last
Movement.last
continue
@product_request
continue
ProductRequest.find(55)
ProductRequest.last
@product_request
continue
@product_request
params
continue
DeliveryAddress.find(params[:order][:delivery_address]).to_i
'una rata vieja que era planchadora'.to_i
'otro'.to_i
'otra'.to_i
'otra'.to_i == true
'otra'.to_i = true
'otra'.to_i.true?
'otra'.to_i.nil?
address
address = DeliveryAddress.find(params[:order][:delivery_address])
'otra'direcci√≥n'.to_i
'16'.to_i
DeliveryAddress.find(params[:order][:delivery_address])
continue
notes
address
continue
notes
address
params
continue
params
continue
params
continue
Order.find(a)
Order.where(status: a)
@orders
a
continue
a
result
continue
ProductRequest.where(status: 'sin asignar')
continue
@order
continue
@order
continue
user = User.find(params[:order][:user_ids])
continue
User.find(u)
u = params[:order][:user_ids]
params[:order][:user_ids]
params[:order]
params
params[:order][:user]
continue
params
continue
params
continue
params
continue
@owner
prospect
continue
params
continue
prospect
continue
@owner
prospect
orisoect
continue
prospect
@owner.is_a?(Store)
exit
Prospect.last
Prospect.find_by_store_code(@owner.store_code)
@owner.store_code
@owner.is_a?(Store)
@owner
params
owner
owner.store_code
prospect
continue
prospect
continue
store
@owner.billing_address
@owner
continue
@owner.billing_address
@owner
current_user.store.billing_address
current_user.store
current_user
continue
@prospect
continue
@prospect
continue
@prospect
continue
@prospect
continue
@prospect
continue
@store
continue
<<<<<<< HEAD
role
continue
role
continue
current_user.role
current_user
continue
@products.count
@products
continue
@products[0]
@products
continue
@products.count
@products
my_products
continue
my_products.count
my_products
@products
my_products.count
main_products.count
main_products
my_products
continue
@products.each{ |product| puts product.id }
@products.each do |product|
@products.count
@products
my_products
main_products
continue
my_ids
my_products.count
main_products.count
main_products
@products.count
@products
continue
my_products
main_products
@products
continue
main_products
continue
@products
my_products
continue
my_ids
continue
my_business_units
continue
main_products
continue
Product.where(business_unit: ids)
ids
main_products
continue
params
continue
@owner
continue
@store_type.id
@store_type
continue
StoreType.find(params[:store][:store_type])
@store_type
continue
StoreType.find(params[:store][:store_type]).id
StoreType.find(params[:store][:store_type])
params[:store][:store_type]
params[:store]
@store_type
continue
@store.business_unit
@store
@business_unit
BusinessUnit.find(params[:store][:business_unit])
@store.store_type
@store
params[:store]BusinessUnit.find(params[:store][:business_unit])
params
continue
params[:udasdasd]
params[:users]
params[:user]
params
continue
params
params[:user]
params
continue
@products.find(11).images
@products.find(13).images
@products.find(12).images
@products.find(11).images
