continue
exit
@objects
@rows
continue
@rows
continue
exit
hash["sat_unit_description"] = Service.find_by_unique_code(params["unique_code"][n].split(' ').first).sat_unit_key.description
hash["sat_unit_key"] = Service.find_by_unique_code(params["unique_code"][n].split(' ').first).sat_unit_key.unit
Service.find_by_unique_code(params["unique_code"][n].split(' ').first).sat_key.sat_key
Service.find_by_unique_code(params["unique_code"][n].split(' ').first)
          debugger
continue
exit
params[:store][:prospects_file]
params[:store]
params[:store][:prospects]
params[:store]
params
roble@disenosdecarton.com.mx
continue
pp @rows
@rows
@bill.rows.each{ |row| }
@bill.rows
@bill
@type_of_bill_key
@discount_any
@rows
exit
BillingAddress.find_by_business_name(params['prospect_name']).prospects.first
BillingAddress.find_by_business_name(params['prospect_name']).prospects
BillingAddress.find_by_business_name(params['prospect_name'])
BillingAddress.find_by_business_name(params['prospect_name']).first.prospect
pp params
continue
exit
@rows
continue
exit
@relation_type
continue
exit
PaymentForm.find(params['payment'])
TypeOfBill.find(params["type_of_bill"])
pp params
CfdiUse.find(params['cfdi_use'])
Prospect.find(params['prospect_name']).first
BillingAddress.find(params['prospect_name'])
BillingAddress.find(params['prospect_name']).prospects.first
Store.find(params['store_name']).first
pp params
continue
exit
pp params["sat_unit_key"][0]
pp params["quantity"][0]
pp params["quantity"].length
pp params
exit
params["tickets"].first
params["tickets"]
pp params
exit
pp params
Product.find_by_unique_code(params["unique_code"][0].split(' ').first).sat_unit_key.unit
Product.find_by_unique_code(params["unique_code"][0].split(' ').first).sat_unit_key
Product.find_by_unique_code(params["unique_code"][0].split(' ').first).sat_key.sat_key
Product.find_by_unique_code(params["unique_code"][0].split(' ').first).sat_key
Product.find_by_unique_code(params["unique_code"][0].split(' ').first)
params["unique_code"][0].split(' ').first
params["unit_value_hidden"][0].to_f
params["unit_value_hidden"][0]
params["product_id"]
pp params
exit
params["unique_code"][0].split(' ').first
params["unique_code"][0].split(' ')
params["unique_code"][0]
params["unique_code"].first
params["unique_code"].length
params['form'].present?
pp params
exit
pp params
exit
pp params
PaymentForm.find(1)
PaymentMethod.find(1)
PaymentForm.find(1)
pp params
exit
pp params
exit
pp params
params
exit
pp params
params
exit
pp params
exit
pp params
params
exit
CfdiUse.find(params['cfdi_use'])ex
pp params
store.business_unit.billing_address.tax_regime.
@store_name = store.business_unit.billing_address.business_name
params['store_name']
@prospect_rfc = prospect.billing_address.rfc
prospect = @prospect
@prospect = BillingAddress.find_by_business_name(params['prospect_name']).prospects.first
@store_rfc = store.business_unit.billing_address.rfc
store = @store
@store = Store.find(params['store_name']).first
@store = Store.find(params['store_name'])
@store_rfc = store.business_unit.billing_address.rfc
store.first
store
store.business_units
store.business_unit
store
@store_rfc = store.business_unit.billing_address.rfc
store = @store
@store = Store.find(params['store_name'])
TypeOfBill.find_by_key('I').key
TypeOfBill.find_by_key('I').KEY
TypeOfBill.find_by_key('I')
TypeOfBill.first
BillType.first
Store.find(7).zip_code
Store.find(7).zipcode
Store.find(7)
Store.find(7).series
params['series']
CfdiUse.find(params['cfdi_use'])
pp params 
exit
params[:type_of_bill]
params['type_of_bill']
pp params
BillingAddress.find_by_business_name(params['prospect_name']).prospects.first
BillingAddress.find_by_business_name(params['prospect_name']).prospects
BillingAddress.find_by_business_name(params['prospect_name'])
BillingAddress.find_by_business_name(params['prospect_name']).prospect
BillingAddress.find_by_business_name(params['prospect_name'])
BillingAddress.new
pp Prospect.new
ppProspect.new
Prospect.find_by_prospect_name(params['prospect_name'])
Prosect.find_by_prospect_name(params['prospect_name'])
params["form"].present?
params["form"]
Store.find(params['store_name'])
pp params
exit
pp params
exit
pp params
params
exit
foreign
global
continue
exit
params
exit
params
exit
params
exit
pp self
self
continue
exit
continue
@ids_references
exit
@ids_references
exit
@ids_references
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
params["store_movements"]["rowsLimit"]
params["store_movements"]["rowsCount"]
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
Ticket.first.store_movements
Ticket.first.payments
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
@ids_references
continue
User.last
params["users"]
@ids_references
continue
pp params["users"]
pp params["payments"]["rowsLimit"]
pp params["payments"].count
pp params["payments"].first.first
pp params["payments"].first.key
pp params["payments"]
pp params["tickets"].first.second["object"]
pp params["tickets"].first.second
pp params["tickets"].first.first
pp params["tickets"].first.value
pp params["tickets"].first
pp params
params
continue
@rows
continue
pp @rows
